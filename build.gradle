plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = '2.17.2',
    junitVersion = '5.8.2',
    restAssuredVersion = "4.3.3",
    aspectjVersion = "1.9.6",
    jacksonCoreVersion = "2.13.0",
    hamcrestVersion = "1.3",
    log4jVersion = '2.17.1',
    slf4jVersion = '1.7.35',
    assertjVersion = '3.11.1',
    javafakerjVersion = '1.0.2'


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonCoreVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonCoreVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonCoreVersion"
    compile "org.hamcrest:hamcrest-all:$hamcrestVersion"
    compile "com.github.javafaker:javafaker:$javafakerjVersion"


    // JUnit5
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testRuntime group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4jVersion
    testRuntime group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    testRuntime group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4jVersion
    testCompile group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion
    testCompile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-java-commons:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.assertj:assertj-core:$assertjVersion"
    )

}

test {
    useJUnitPlatform()
    systemProperty 'allure.results.directory', "$projectDir/build/allure-results"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"
    }
    scanForTestClasses = false
    testLogging.showStandardStreams = true
    dependsOn 'cleanTest'
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = "$allureVersion"
    useJUnit5 {
        version = "$allureVersion"
    }
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}